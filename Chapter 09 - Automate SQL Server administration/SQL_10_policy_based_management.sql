--##############################################################################
--
-- SAMPLE SCRIPTS TO ACCOMPANY "SQL SERVER 2022 ADMINISTRATION INSIDE OUT"
--
-- Â© 2022 MICROSOFT PRESS
--
--##############################################################################
--
-- CHAPTER 9: AUTOMATE SQL SERVER ADMINISTRATION
-- T-SQL SAMPLE 10
USE msdb;
GO

-- Create policy to evaluate status of AdHocRemoteQueries option
-- This script is generated by SSMS
Declare @condition_id int;
--Create Condition
EXEC msdb.dbo.sp_syspolicy_add_condition @name=N'AHRQE Disabled', @description=N'Keep AdHocRemoteQueries disabled.', @facet=N'ISurfaceAreaFacet', @expression=N'<Operator>
  <TypeClass>Bool</TypeClass>
  <OpType>EQ</OpType>
  <Count>2</Count>
  <Attribute>
    <TypeClass>Bool</TypeClass>
    <Name>AdHocRemoteQueriesEnabled</Name>
  </Attribute>
  <Function>
    <TypeClass>Bool</TypeClass>
    <FunctionType>False</FunctionType>
    <ReturnType>Bool</ReturnType>
    <Count>0</Count>
  </Function>
</Operator>', @is_name_condition=0, @obj_name=N'', @condition_id=@condition_id OUTPUT
Select @condition_id;
GO
--Create internal object set and target sets to support condition
Declare @object_set_id int;
EXEC msdb.dbo.sp_syspolicy_add_object_set @object_set_name=N'Disable AdHocRemoteQueriesEnabled_ObjectSet', @facet=N'ISurfaceAreaFacet', @object_set_id=@object_set_id OUTPUT;
Select @object_set_id;
Declare @target_set_id int;
EXEC msdb.dbo.sp_syspolicy_add_target_set @object_set_name=N'Disable AdHocRemoteQueriesEnabled_ObjectSet', @type_skeleton=N'Server', @type=N'SERVER', @enabled=True, @target_set_id=@target_set_id OUTPUT;
Select @target_set_id;
GO
--Create Policy
Declare @policy_id int;
EXEC msdb.dbo.sp_syspolicy_add_policy @name=N'Keep AdHocRemoteQueries Disabled', @condition_name=N'AHRQE Disabled', @policy_category=N'', @description=N'', @help_text=N'', @help_link=N'', @schedule_uid=N'00000000-0000-0000-0000-000000000000', @execution_mode=2, @is_enabled=True, @policy_id=@policy_id OUTPUT, @root_condition_name=N'', @object_set=N'Disable AdHocRemoteQueriesEnabled_ObjectSet';
Select @policy_id;
GO

--Create policy to evaluate certificate expiration
--This script is generated by SSMS
Declare @condition_id int;
--Create Condition
EXEC msdb.dbo.sp_syspolicy_add_condition @name=N'Expiration', @description=N'Check to verify that any non-system certificates have an expiration in the next three months, fails policy if so. Ignores any certificates with "##" in the name.', @facet=N'Certificate', @expression=N'<Operator>
  <TypeClass>Bool</TypeClass>
  <OpType>OR</OpType>
  <Count>2</Count>
  <Operator>
    <TypeClass>Bool</TypeClass>
    <OpType>GT</OpType>
    <Count>2</Count>
    <Attribute>
      <TypeClass>DateTime</TypeClass>
      <Name>ExpirationDate</Name>
    </Attribute>
    <Function>
      <TypeClass>DateTime</TypeClass>
      <FunctionType>DateAdd</FunctionType>
      <ReturnType>DateTime</ReturnType>
      <Count>3</Count>
      <Constant>
        <TypeClass>String</TypeClass>
        <ObjType>System.String</ObjType>
        <Value>m</Value>
      </Constant>
      <Constant>
        <TypeClass>Numeric</TypeClass>
        <ObjType>System.Double</ObjType>
        <Value>6</Value>
      </Constant>
      <Function>
        <TypeClass>DateTime</TypeClass>
        <FunctionType>GetDate</FunctionType>
        <ReturnType>DateTime</ReturnType>
        <Count>0</Count>
      </Function>
    </Function>
  </Operator>
  <Operator>
    <TypeClass>Bool</TypeClass>
    <OpType>LIKE</OpType>
    <Count>2</Count>
    <Attribute>
      <TypeClass>String</TypeClass>
      <Name>Name</Name>
    </Attribute>
    <Constant>
      <TypeClass>String</TypeClass>
      <ObjType>System.String</ObjType>
      <Value>##%</Value>
    </Constant>
  </Operator>
</Operator>', @is_name_condition=0, @obj_name=N'', @condition_id=@condition_id OUTPUT;
Select @condition_id;
GO

-- Create internal object set and target sets to support condition
Declare @object_set_id int;
EXEC msdb.dbo.sp_syspolicy_add_object_set @object_set_name=N'Cert Expiration_ObjectSet', @facet=N'Certificate', @object_set_id=@object_set_id OUTPUT;
Select @object_set_id;
GO
Declare @target_set_id int;
EXEC msdb.dbo.sp_syspolicy_add_target_set @object_set_name=N'Cert Expiration_ObjectSet', @type_skeleton=N'Server/Database/Certificate', @type=N'CERTIFICATE', @enabled=True, @target_set_id=@target_set_id OUTPUT;
Select @target_set_id;
EXEC msdb.dbo.sp_syspolicy_add_target_set_level @target_set_id=@target_set_id, @type_skeleton=N'Server/Database/Certificate', @level_name=N'Certificate', @condition_name=N'', @target_set_level_id=0;
EXEC msdb.dbo.sp_syspolicy_add_target_set_level @target_set_id=@target_set_id, @type_skeleton=N'Server/Database', @level_name=N'Database', @condition_name=N'', @target_set_level_id=0;
GO

-- Create Policy
Declare @policy_id int;
EXEC msdb.dbo.sp_syspolicy_add_policy @name=N'Cert Expiration', @condition_name=N'Expiration', @policy_category=N'', @description=N'', @help_text=N'', @help_link=N'', @schedule_uid=N'00000000-0000-0000-0000-000000000000', @execution_mode=2, @is_enabled=True, @policy_id=@policy_id OUTPUT, @root_condition_name=N'', @object_set=N'Cert Expiration_ObjectSet'
Select @policy_id;
GO
